// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(3), /* $, reduce: Variables */
			nil,       /* empty */
			reduce(3), /* var, reduce: Variables */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			reduce(3), /* proc, reduce: Variables */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          /* INVALID */
			accept(true), /* $ */
			nil,          /* empty */
			nil,          /* var */
			nil,          /* minus */
			nil,          /* endline */
			nil,          /* identifier */
			nil,          /* comma */
			nil,          /* float */
			nil,          /* int */
			nil,          /* char */
			nil,          /* void */
			nil,          /* proc */
			nil,          /* lbracket */
			nil,          /* rbracket */
			nil,          /* lbrace */
			nil,          /* rbrace */
			nil,          /* assign */
			nil,          /* prnt */
			nil,          /* return */
			nil,          /* while */
			nil,          /* arithmeticSymbol */
			nil,          /* char_literal */
			nil,          /* else */
			nil,          /* fp_literal */
			nil,          /* if */
			nil,          /* int_literal */
			nil,          /* not */
			nil,          /* or */
			nil,          /* relacionalSymbol */
			nil,          /* sn_literal */
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			reduce(12), /* $, reduce: Functions */
			nil,        /* empty */
			shift(5),   /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			reduce(12), /* proc, reduce: Functions */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(1), /* $, reduce: Program */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			shift(7),  /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(2), /* $, reduce: Variables */
			nil,       /* empty */
			reduce(2), /* var, reduce: Variables */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			reduce(2), /* proc, reduce: Variables */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* empty */
			nil,      /* var */
			nil,      /* minus */
			nil,      /* endline */
			shift(9), /* identifier */
			nil,      /* comma */
			nil,      /* float */
			nil,      /* int */
			nil,      /* char */
			nil,      /* void */
			nil,      /* proc */
			nil,      /* lbracket */
			nil,      /* rbracket */
			nil,      /* lbrace */
			nil,      /* rbrace */
			nil,      /* assign */
			nil,      /* prnt */
			nil,      /* return */
			nil,      /* while */
			nil,      /* arithmeticSymbol */
			nil,      /* char_literal */
			nil,      /* else */
			nil,      /* fp_literal */
			nil,      /* if */
			nil,      /* int_literal */
			nil,      /* not */
			nil,      /* or */
			nil,      /* relacionalSymbol */
			nil,      /* sn_literal */
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			reduce(11), /* $, reduce: Functions */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			reduce(11), /* proc, reduce: Functions */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			reduce(16), /* minus, reduce: NameArgs */
			nil,        /* endline */
			shift(10),  /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(16), /* lbrace, reduce: NameArgs */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(12), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			reduce(5), /* minus, reduce: Identifiers */
			nil,       /* endline */
			nil,       /* identifier */
			shift(13), /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			shift(14), /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(15), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			shift(17), /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			shift(19), /* float */
			shift(20), /* int */
			shift(21), /* char */
			shift(22), /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* empty */
			nil,      /* var */
			nil,      /* minus */
			nil,      /* endline */
			shift(9), /* identifier */
			nil,      /* comma */
			nil,      /* float */
			nil,      /* int */
			nil,      /* char */
			nil,      /* void */
			nil,      /* proc */
			nil,      /* lbracket */
			nil,      /* rbracket */
			nil,      /* lbrace */
			nil,      /* rbrace */
			nil,      /* assign */
			nil,      /* prnt */
			nil,      /* return */
			nil,      /* while */
			nil,      /* arithmeticSymbol */
			nil,      /* char_literal */
			nil,      /* else */
			nil,      /* fp_literal */
			nil,      /* if */
			nil,      /* int_literal */
			nil,      /* not */
			nil,      /* or */
			nil,      /* relacionalSymbol */
			nil,      /* sn_literal */
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			shift(24),  /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(19), /* rbracket, reduce: Args */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			shift(27), /* float */
			shift(28), /* int */
			shift(29), /* char */
			shift(30), /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			reduce(13), /* $, reduce: Function */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			reduce(13), /* proc, reduce: Function */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(22), /* var, reduce: Commands */
			nil,        /* minus */
			nil,        /* endline */
			reduce(22), /* identifier, reduce: Commands */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(22), /* lbrace, reduce: Commands */
			reduce(22), /* rbrace, reduce: Commands */
			nil,        /* assign */
			reduce(22), /* prnt, reduce: Commands */
			reduce(22), /* return, reduce: Commands */
			reduce(22), /* while, reduce: Commands */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			shift(32), /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			reduce(7), /* endline, reduce: Type */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			reduce(8), /* endline, reduce: Type */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			reduce(9), /* endline, reduce: Type */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			reduce(10), /* endline, reduce: Type */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			reduce(6), /* minus, reduce: Identifiers */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(33), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			shift(34), /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			shift(17), /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			reduce(7), /* lbrace, reduce: Type */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			reduce(8), /* lbrace, reduce: Type */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			reduce(9), /* lbrace, reduce: Type */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(10), /* lbrace, reduce: Type */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			shift(37), /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(38), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			shift(40), /* lbrace */
			shift(41), /* rbrace */
			nil,       /* assign */
			shift(47), /* prnt */
			shift(48), /* return */
			shift(49), /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(4), /* $, reduce: Variable */
			nil,       /* empty */
			reduce(4), /* var, reduce: Variable */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			reduce(4), /* proc, reduce: Variable */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			shift(51), /* float */
			shift(52), /* int */
			shift(53), /* char */
			shift(54), /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			reduce(16), /* minus, reduce: NameArgs */
			nil,        /* endline */
			shift(10),  /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(16), /* lbrace, reduce: NameArgs */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			reduce(14), /* $, reduce: Function */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			reduce(14), /* proc, reduce: Function */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(23), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(23), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(23), /* lbrace, reduce: Command */
			reduce(23), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(23), /* prnt, reduce: Command */
			reduce(23), /* return, reduce: Command */
			reduce(23), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* empty */
			nil,      /* var */
			nil,      /* minus */
			nil,      /* endline */
			shift(9), /* identifier */
			nil,      /* comma */
			nil,      /* float */
			nil,      /* int */
			nil,      /* char */
			nil,      /* void */
			nil,      /* proc */
			nil,      /* lbracket */
			nil,      /* rbracket */
			nil,      /* lbrace */
			nil,      /* rbrace */
			nil,      /* assign */
			nil,      /* prnt */
			nil,      /* return */
			nil,      /* while */
			nil,      /* arithmeticSymbol */
			nil,      /* char_literal */
			nil,      /* else */
			nil,      /* fp_literal */
			nil,      /* if */
			nil,      /* int_literal */
			nil,      /* not */
			nil,      /* or */
			nil,      /* relacionalSymbol */
			nil,      /* sn_literal */
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			shift(57), /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(28), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(28), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(28), /* lbrace, reduce: Command */
			reduce(28), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(28), /* prnt, reduce: Command */
			reduce(28), /* return, reduce: Command */
			reduce(28), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(22), /* var, reduce: Commands */
			nil,        /* minus */
			nil,        /* endline */
			reduce(22), /* identifier, reduce: Commands */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(22), /* lbrace, reduce: Commands */
			reduce(22), /* rbrace, reduce: Commands */
			nil,        /* assign */
			reduce(22), /* prnt, reduce: Commands */
			reduce(22), /* return, reduce: Commands */
			reduce(22), /* while, reduce: Commands */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			reduce(20), /* $, reduce: Block */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			reduce(20), /* proc, reduce: Block */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(21), /* var, reduce: Commands */
			nil,        /* minus */
			nil,        /* endline */
			reduce(21), /* identifier, reduce: Commands */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(21), /* lbrace, reduce: Commands */
			reduce(21), /* rbrace, reduce: Commands */
			nil,        /* assign */
			reduce(21), /* prnt, reduce: Commands */
			reduce(21), /* return, reduce: Commands */
			reduce(21), /* while, reduce: Commands */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(24), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(24), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(24), /* lbrace, reduce: Command */
			reduce(24), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(24), /* prnt, reduce: Command */
			reduce(24), /* return, reduce: Command */
			reduce(24), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(25), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(25), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(25), /* lbrace, reduce: Command */
			reduce(25), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(25), /* prnt, reduce: Command */
			reduce(25), /* return, reduce: Command */
			reduce(25), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(26), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(26), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(26), /* lbrace, reduce: Command */
			reduce(26), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(26), /* prnt, reduce: Command */
			reduce(26), /* return, reduce: Command */
			reduce(26), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(27), /* var, reduce: Command */
			nil,        /* minus */
			nil,        /* endline */
			reduce(27), /* identifier, reduce: Command */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(27), /* lbrace, reduce: Command */
			reduce(27), /* rbrace, reduce: Command */
			nil,        /* assign */
			reduce(27), /* prnt, reduce: Command */
			reduce(27), /* return, reduce: Command */
			reduce(27), /* while, reduce: Command */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			shift(59), /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(60), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			shift(62), /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			shift(63),  /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(17), /* rbracket, reduce: Args */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			reduce(7), /* comma, reduce: Type */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			reduce(7), /* rbracket, reduce: Type */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			reduce(8), /* comma, reduce: Type */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			reduce(8), /* rbracket, reduce: Type */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			reduce(9), /* comma, reduce: Type */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			reduce(9), /* rbracket, reduce: Type */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			reduce(10), /* comma, reduce: Type */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(10), /* rbracket, reduce: Type */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			reduce(15), /* minus, reduce: NameArgs */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(15), /* lbrace, reduce: NameArgs */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(64), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(60), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			shift(37), /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(38), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			shift(40), /* lbrace */
			shift(66), /* rbrace */
			nil,       /* assign */
			shift(47), /* prnt */
			shift(48), /* return */
			shift(49), /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			shift(67),  /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(36), /* rbracket, reduce: Expressions */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(70), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			shift(71), /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(72), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			shift(24),  /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(19), /* rbracket, reduce: Args */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			shift(19), /* float */
			shift(20), /* int */
			shift(21), /* char */
			shift(22), /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			shift(76), /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(20), /* var, reduce: Block */
			nil,        /* minus */
			nil,        /* endline */
			reduce(20), /* identifier, reduce: Block */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(20), /* lbrace, reduce: Block */
			reduce(20), /* rbrace, reduce: Block */
			nil,        /* assign */
			reduce(20), /* prnt, reduce: Block */
			reduce(20), /* return, reduce: Block */
			reduce(20), /* while, reduce: Block */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(77), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			shift(78),  /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(34), /* rbracket, reduce: Expressions */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			shift(79), /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(80), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(31), /* var, reduce: Return */
			nil,        /* minus */
			nil,        /* endline */
			reduce(31), /* identifier, reduce: Return */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(31), /* lbrace, reduce: Return */
			reduce(31), /* rbrace, reduce: Return */
			nil,        /* assign */
			reduce(31), /* prnt, reduce: Return */
			reduce(31), /* return, reduce: Return */
			reduce(31), /* while, reduce: Return */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			shift(81), /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			shift(82), /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(18), /* rbracket, reduce: Args */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			shift(83), /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(29), /* var, reduce: Assign */
			nil,        /* minus */
			nil,        /* endline */
			reduce(29), /* identifier, reduce: Assign */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(29), /* lbrace, reduce: Assign */
			reduce(29), /* rbrace, reduce: Assign */
			nil,        /* assign */
			reduce(29), /* prnt, reduce: Assign */
			reduce(29), /* return, reduce: Assign */
			reduce(29), /* while, reduce: Assign */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(84), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(72), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			shift(86), /* endline */
			nil,       /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			reduce(33), /* endline, reduce: Expression */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			nil,       /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(87), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			nil,       /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			nil,       /* prnt */
			nil,       /* return */
			nil,       /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			shift(37), /* var */
			nil,       /* minus */
			nil,       /* endline */
			shift(38), /* identifier */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			shift(40), /* lbrace */
			nil,       /* rbrace */
			nil,       /* assign */
			shift(47), /* prnt */
			shift(48), /* return */
			shift(49), /* while */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* empty */
			reduce(4), /* var, reduce: Variable */
			nil,       /* minus */
			nil,       /* endline */
			reduce(4), /* identifier, reduce: Variable */
			nil,       /* comma */
			nil,       /* float */
			nil,       /* int */
			nil,       /* char */
			nil,       /* void */
			nil,       /* proc */
			nil,       /* lbracket */
			nil,       /* rbracket */
			reduce(4), /* lbrace, reduce: Variable */
			reduce(4), /* rbrace, reduce: Variable */
			nil,       /* assign */
			reduce(4), /* prnt, reduce: Variable */
			reduce(4), /* return, reduce: Variable */
			reduce(4), /* while, reduce: Variable */
			nil,       /* arithmeticSymbol */
			nil,       /* char_literal */
			nil,       /* else */
			nil,       /* fp_literal */
			nil,       /* if */
			nil,       /* int_literal */
			nil,       /* not */
			nil,       /* or */
			nil,       /* relacionalSymbol */
			nil,       /* sn_literal */
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			reduce(33), /* comma, reduce: Expression */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(33), /* rbracket, reduce: Expression */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(35), /* rbracket, reduce: Expressions */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(30), /* var, reduce: Print */
			nil,        /* minus */
			nil,        /* endline */
			reduce(30), /* identifier, reduce: Print */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(30), /* lbrace, reduce: Print */
			reduce(30), /* rbrace, reduce: Print */
			nil,        /* assign */
			reduce(30), /* prnt, reduce: Print */
			reduce(30), /* return, reduce: Print */
			reduce(30), /* while, reduce: Print */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			nil,        /* var */
			nil,        /* minus */
			nil,        /* endline */
			nil,        /* identifier */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			reduce(33), /* rbracket, reduce: Expression */
			nil,        /* lbrace */
			nil,        /* rbrace */
			nil,        /* assign */
			nil,        /* prnt */
			nil,        /* return */
			nil,        /* while */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* empty */
			reduce(32), /* var, reduce: WhileBlock */
			nil,        /* minus */
			nil,        /* endline */
			reduce(32), /* identifier, reduce: WhileBlock */
			nil,        /* comma */
			nil,        /* float */
			nil,        /* int */
			nil,        /* char */
			nil,        /* void */
			nil,        /* proc */
			nil,        /* lbracket */
			nil,        /* rbracket */
			reduce(32), /* lbrace, reduce: WhileBlock */
			reduce(32), /* rbrace, reduce: WhileBlock */
			nil,        /* assign */
			reduce(32), /* prnt, reduce: WhileBlock */
			reduce(32), /* return, reduce: WhileBlock */
			reduce(32), /* while, reduce: WhileBlock */
			nil,        /* arithmeticSymbol */
			nil,        /* char_literal */
			nil,        /* else */
			nil,        /* fp_literal */
			nil,        /* if */
			nil,        /* int_literal */
			nil,        /* not */
			nil,        /* or */
			nil,        /* relacionalSymbol */
			nil,        /* sn_literal */
		},
	},
}
